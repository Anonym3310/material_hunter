#!/system/bin/sh

shels=$(readlink -f $0)
. ${shels%/*}/bootroot_env

# Check busybox functionality
if [ -z "$BUSYBOX" ]; then
    echo "[-] Busybox isn't installed or permissions isn't granted to execute it."
    echo "Check has been made for:"
    echo "1. /system/xbin"
    echo "2. /system/bin"
    exit 2
fi

if [ -z "$MNT" ]; then
    echo "[-] \$MNT variable isn't defined, please run the MaterialHunter app first."
    exit 2
fi

if [ ! -d "$MNT" ]; then
    echo "[-] Chroot directory doesn't exist."
    echo "[!] Don't do stupid things."
    exit 2
fi

# Check chroot status
check_chroot() {
    if [ ! "$($BUSYBOX chroot $MNT /bin/uname)" ]; then
        echo "[-] Chroot corrupted. This is not a MaterialHunter problem!"
        echo "Solutions:"
        echo "1. Check the permissions of the chroot directories"
        echo "2. Try using busybox to login and see errors (busybox chroot $MNT /bin/uname)"
        echo "3. Contact chroot builder"
        return 3
    fi
    if [ ! -x "$MNT/$CHROOT_EXEC" ]; then
        echo "[-] sudo not installed. This is not a MaterialHunter problem!"
        echo "Solutions:"
        echo "1. Try using busybox to login and install it"
        echo "2. Contact chroot builder"
        return 3
    fi
}

# Check mount
check_mount(){
    local FS
    FS=(proc sys dev dev/pts)
    if [ $mount_sdcard == "true" ]; then
        FS[${#FS[@]}]=sdcard
    fi
    if [ $mount_system == "true" ]; then
        FS[${#FS[@]}]=system
    fi
    if [ $mount_data == "true" ]; then
        FS[${#FS[@]}]=data
    fi
    for i in "${FS[@]}"; do
        if [ "$(grep $MNT/$i /proc/mounts)" ]; then
            echo "[+] $i partition is mounted."
            continue
        else
            echo "[-] Chroot isn't fully mounted."
            return 1
        fi
    done
    [ ! -e "/dev/net/tun" ] && return 1
    [ ! -e "/dev/fd" -o ! -e "/dev/stdin" -o ! -e "/dev/stdout" -o ! -e "/dev/stderr" ] && return 1
    echo "[+] Chroot fully mounted." && return 0
}

# Binding filesystem
do_mount() {

    $BUSYBOX mount -o remount,suid /data
    $BUSYBOX chmod +s $MNT$CHROOT_EXEC

    ######### SET FD, Thanks @feefik and @zer0conf ########
    if [ ! -e "/dev/fd" -o ! -e "/dev/stdin" -o ! -e "/dev/stdout" -o ! -e "/dev/stderr" ]; then
        [ -e "/dev/fd" ] || ln -s /proc/self/fd /dev/ && echo "[+] linked /proc/self/fd to /dev/"
        [ -e "/dev/stdin" ] || ln -s /proc/self/fd/0 /dev/stdin && echo "[+] linked /proc/self/fd/0 to /dev/stdin"
        [ -e "/dev/stdout" ] || ln -s /proc/self/fd/1 /dev/stdout && echo "[+] linked /proc/self/fd/1 to /dev/stdout"
        [ -e "/dev/stderr" ] || ln -s /proc/self/fd/2 /dev/stderr && echo "[+] linked /proc/self/fd/2 to /dev/stderr"
    fi

    ######### SET TUN ########
    if [ ! -e "/dev/net/tun" ]; then
        [ ! -d "/dev/net" ] && mkdir -p /dev/net
        mknod /dev/net/tun c 10 200 && echo "[+] created /dev/net/tun"
    fi

    ######### SET DEV ########
    if [ ! "$($BUSYBOX mountpoint $MNT/dev 2> /dev/null | grep 'is a')" ]; then
        [ -d $MNT/dev ] && rm -rf $MNT/dev
        [ ! -d $MNT/dev ] && mkdir -p $MNT/dev
        $BUSYBOX mount -o bind /dev $MNT/dev && echo "[+] mounted /dev"
    fi

    ######### SET DEV PTS ########
    if [ ! "$($BUSYBOX mountpoint $MNT/dev/pts 2> /dev/null | grep 'is a')" ]; then
        $BUSYBOX mount -t devpts devpts $MNT/dev/pts && echo "[+] mounted /dev/pts"
    fi

    ######### SET DEV SHM ########
    if [ ! "$($BUSYBOX mountpoint $MNT/dev/shm 2> /dev/null | grep 'is a')" ]; then
        [ ! -d $MNT/dev/shm ] && mkdir -p $MNT/dev/shm
        $BUSYBOX mount -o rw,nosuid,nodev,mode=1777 -t tmpfs tmpfs $MNT/dev/shm && echo "[+] mounted /dev/shm"
    fi

    ######### SET PROC ########
    if [ ! "$($BUSYBOX mountpoint $MNT/proc 2> /dev/null | grep 'is a')" ]; then
        [ -d $MNT/proc ] && rm -rf $MNT/proc
        [ ! -d $MNT/proc ] && mkdir -p $MNT/proc
        $BUSYBOX mount -t proc proc $MNT/proc && echo "[+] mounted /proc"
    fi

    ######### SET SYS ########
    if [ ! "$($BUSYBOX mountpoint $MNT/sys 2> /dev/null | grep 'is a')" ]; then
        [ -d $MNT/sys ] && rm -rf $MNT/sys
        [ ! -d $MNT/sys ] && mkdir -p $MNT/sys
        $BUSYBOX mount -t sysfs sys $MNT/sys && echo "[+] mounted /sys"
    fi

    ######### SET SYSTEM ########
    if [ $mount_system == "true" ]; then
        if [ ! "$($BUSYBOX mountpoint $MNT/system 2> /dev/null | grep 'is a')" ]; then
            [ -d $MNT/system ] && rm -rf $MNT/system
            [ ! -d $MNT/system ] && mkdir -p $MNT/system
            $BUSYBOX mount -o bind /system $MNT/system && echo "[+] mounted /system"
        fi
    fi

    ######### SET DATA ########
    if [ $mount_data == "true" ]; then
        if [ ! "$($BUSYBOX mountpoint $MNT/data 2> /dev/null | grep 'is a')" ]; then
            # [ -d $MNT/data ] && rm -rf $MNT/data
            [ ! -d $MNT/data ] && mkdir -p $MNT/data
            $BUSYBOX mount -o bind /data $MNT/data && echo "[+] mounted /data"
        fi
    fi

    ######### SET INTERNAL SDCARD ########
    if [ $mount_sdcard == "true" ]; then
        if [ ! "$($BUSYBOX mountpoint $MNT/sdcard 2> /dev/null | grep 'is a')" ]; then
            [ ! -d $MNT/sdcard ] && mkdir -p $MNT/sdcard
            for sdcard in \
                /storage/emulated/0 \
                /storage/emulated/legacy \
                /storage/sdcard0 \
                /sdcard
            do
                [ -d "$sdcard" ] &&
                    $BUSYBOX mount -o bind "$sdcard" "$MNT/sdcard" && echo "[+] mounted internal storage"
                    break
            done
        else
            echo "[!] Internal storage is already mounted, all right?"
        fi
    fi

    ######### SET 250MB TO ALLOW POSTGRESQL #########
    $BUSYBOX sysctl -w kernel.shmmax=268435456

    ######### SET NETWORK AND HOSTNAME ########
    $BUSYBOX sysctl -w net.ipv4.ip_forward=1
    echo "127.0.0.1          localhost $HOSTNAME" > $MNT/etc/hosts
    echo "::1                localhost ip6-localhost ip6-loopback" >> $MNT/etc/hosts
    echo "$HOSTNAME" > $MNT/proc/sys/kernel/hostname

    ######### Start user defined services #########
    . /data/data/material.hunter/files/etc/init.d/80postservices

    ######### Setup done #########
    echo "[+] Chroot mounted and ready to go."
}

################################
########## MAIN PART ###########
################################

echo "[!] Checking chroot environment."
check_chroot
RES=$?
if [ $RES -eq 1 ] || [ $RES -eq 3 ]; then
    echo "[-] Aborted."
    exit 1
fi

check_mount
RES=$?
if [ $RES -eq 1 ]; then
    echo "[!] Mounting now..."
    do_mount
fi